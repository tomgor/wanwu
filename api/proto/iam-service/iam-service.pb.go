// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: proto/iam-service/iam-service.proto

package iam_service

import (
	err_code "github.com/UnicomAI/wanwu/api/proto/err-code"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Perm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Perm string `protobuf:"bytes,1,opt,name=perm,proto3" json:"perm,omitempty"`
}

func (x *Perm) Reset() {
	*x = Perm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Perm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Perm) ProtoMessage() {}

func (x *Perm) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Perm.ProtoReflect.Descriptor instead.
func (*Perm) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{0}
}

func (x *Perm) GetPerm() string {
	if x != nil {
		return x.Perm
	}
	return ""
}

type IDName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	NameStatus *err_code.Status `protobuf:"bytes,3,opt,name=nameStatus,proto3" json:"nameStatus,omitempty"`
}

func (x *IDName) Reset() {
	*x = IDName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDName) ProtoMessage() {}

func (x *IDName) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDName.ProtoReflect.Descriptor instead.
func (*IDName) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{1}
}

func (x *IDName) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *IDName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IDName) GetNameStatus() *err_code.Status {
	if x != nil {
		return x.NameStatus
	}
	return nil
}

type Select struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selects []*IDName `protobuf:"bytes,1,rep,name=selects,proto3" json:"selects,omitempty"`
}

func (x *Select) Reset() {
	*x = Select{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Select) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Select) ProtoMessage() {}

func (x *Select) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Select.ProtoReflect.Descriptor instead.
func (*Select) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{2}
}

func (x *Select) GetSelects() []*IDName {
	if x != nil {
		return x.Selects
	}
	return nil
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string     `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Status     bool       `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	UserName   string     `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName,omitempty"`
	NickName   string     `protobuf:"bytes,4,opt,name=nickName,proto3" json:"nickName,omitempty"`
	Gender     string     `protobuf:"bytes,5,opt,name=gender,proto3" json:"gender,omitempty"`
	Phone      string     `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	Email      string     `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	Company    string     `protobuf:"bytes,8,opt,name=company,proto3" json:"company,omitempty"`
	Remark     string     `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`
	CreatedAt  int64      `protobuf:"varint,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Creator    *IDName    `protobuf:"bytes,11,opt,name=creator,proto3" json:"creator,omitempty"`
	Orgs       []*UserOrg `protobuf:"bytes,12,rep,name=orgs,proto3" json:"orgs,omitempty"`
	Language   string     `protobuf:"bytes,13,opt,name=language,proto3" json:"language,omitempty"`
	AvatarPath string     `protobuf:"bytes,14,opt,name=avatarPath,proto3" json:"avatarPath,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{3}
}

func (x *UserInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserInfo) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *UserInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserInfo) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UserInfo) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *UserInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserInfo) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *UserInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UserInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UserInfo) GetCreator() *IDName {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *UserInfo) GetOrgs() []*UserOrg {
	if x != nil {
		return x.Orgs
	}
	return nil
}

func (x *UserInfo) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *UserInfo) GetAvatarPath() string {
	if x != nil {
		return x.AvatarPath
	}
	return ""
}

type UserOrg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Org   *IDName       `protobuf:"bytes,1,opt,name=org,proto3" json:"org,omitempty"`
	Roles []*RoleIDName `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *UserOrg) Reset() {
	*x = UserOrg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOrg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOrg) ProtoMessage() {}

func (x *UserOrg) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOrg.ProtoReflect.Descriptor instead.
func (*UserOrg) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{4}
}

func (x *UserOrg) GetOrg() *IDName {
	if x != nil {
		return x.Org
	}
	return nil
}

func (x *UserOrg) GetRoles() []*RoleIDName {
	if x != nil {
		return x.Roles
	}
	return nil
}

type GetUserSelectNotInOrgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId    string `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
}

func (x *GetUserSelectNotInOrgReq) Reset() {
	*x = GetUserSelectNotInOrgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSelectNotInOrgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSelectNotInOrgReq) ProtoMessage() {}

func (x *GetUserSelectNotInOrgReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSelectNotInOrgReq.ProtoReflect.Descriptor instead.
func (*GetUserSelectNotInOrgReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetUserSelectNotInOrgReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *GetUserSelectNotInOrgReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type GetUserSelectByUserIDsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []string `protobuf:"bytes,1,rep,name=userIds,proto3" json:"userIds,omitempty"`
}

func (x *GetUserSelectByUserIDsReq) Reset() {
	*x = GetUserSelectByUserIDsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSelectByUserIDsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSelectByUserIDsReq) ProtoMessage() {}

func (x *GetUserSelectByUserIDsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSelectByUserIDsReq.ProtoReflect.Descriptor instead.
func (*GetUserSelectByUserIDsReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserSelectByUserIDsReq) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type GetUserListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId    string `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	PageNo   int32  `protobuf:"varint,3,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize int32  `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *GetUserListReq) Reset() {
	*x = GetUserListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserListReq) ProtoMessage() {}

func (x *GetUserListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserListReq.ProtoReflect.Descriptor instead.
func (*GetUserListReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserListReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *GetUserListReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GetUserListReq) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetUserListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetUserListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users    []*UserInfo `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	Total    int64       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	PageNo   int32       `protobuf:"varint,3,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize int32       `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *GetUserListResp) Reset() {
	*x = GetUserListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserListResp) ProtoMessage() {}

func (x *GetUserListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserListResp.ProtoReflect.Descriptor instead.
func (*GetUserListResp) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserListResp) GetUsers() []*UserInfo {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *GetUserListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetUserListResp) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetUserListResp) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=orgId,proto3" json:"orgId,omitempty"`
}

func (x *GetUserInfoReq) Reset() {
	*x = GetUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoReq) ProtoMessage() {}

func (x *GetUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoReq.ProtoReflect.Descriptor instead.
func (*GetUserInfoReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetUserInfoReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserInfoReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

type CreateUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatorId string   `protobuf:"bytes,1,opt,name=creatorId,proto3" json:"creatorId,omitempty"`
	OrgId     string   `protobuf:"bytes,2,opt,name=orgId,proto3" json:"orgId,omitempty"`
	UserName  string   `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName,omitempty"`
	NickName  string   `protobuf:"bytes,4,opt,name=nickName,proto3" json:"nickName,omitempty"`
	Gender    string   `protobuf:"bytes,5,opt,name=gender,proto3" json:"gender,omitempty"`
	Phone     string   `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	Email     string   `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	Company   string   `protobuf:"bytes,8,opt,name=company,proto3" json:"company,omitempty"`
	Remark    string   `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`
	Password  string   `protobuf:"bytes,10,opt,name=password,proto3" json:"password,omitempty"`
	RoleIds   []string `protobuf:"bytes,11,rep,name=roleIds,proto3" json:"roleIds,omitempty"`
}

func (x *CreateUserReq) Reset() {
	*x = CreateUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserReq) ProtoMessage() {}

func (x *CreateUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserReq.ProtoReflect.Descriptor instead.
func (*CreateUserReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{10}
}

func (x *CreateUserReq) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *CreateUserReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *CreateUserReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *CreateUserReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *CreateUserReq) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *CreateUserReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateUserReq) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *CreateUserReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CreateUserReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateUserReq) GetRoleIds() []string {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

type UpdateUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	OrgId    string   `protobuf:"bytes,2,opt,name=orgId,proto3" json:"orgId,omitempty"`
	UserName string   `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName,omitempty"`
	NickName string   `protobuf:"bytes,4,opt,name=nickName,proto3" json:"nickName,omitempty"`
	Gender   string   `protobuf:"bytes,5,opt,name=gender,proto3" json:"gender,omitempty"`
	Phone    string   `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	Email    string   `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	Company  string   `protobuf:"bytes,8,opt,name=company,proto3" json:"company,omitempty"`
	Remark   string   `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`
	RoleIds  []string `protobuf:"bytes,10,rep,name=roleIds,proto3" json:"roleIds,omitempty"`
}

func (x *UpdateUserReq) Reset() {
	*x = UpdateUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserReq) ProtoMessage() {}

func (x *UpdateUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserReq.ProtoReflect.Descriptor instead.
func (*UpdateUserReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateUserReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *UpdateUserReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UpdateUserReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UpdateUserReq) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *UpdateUserReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateUserReq) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *UpdateUserReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdateUserReq) GetRoleIds() []string {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

type DeleteUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *DeleteUserReq) Reset() {
	*x = DeleteUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserReq) ProtoMessage() {}

func (x *DeleteUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserReq.ProtoReflect.Descriptor instead.
func (*DeleteUserReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteUserReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ChangeUserStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Status bool   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ChangeUserStatusReq) Reset() {
	*x = ChangeUserStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeUserStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeUserStatusReq) ProtoMessage() {}

func (x *ChangeUserStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeUserStatusReq.ProtoReflect.Descriptor instead.
func (*ChangeUserStatusReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{13}
}

func (x *ChangeUserStatusReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ChangeUserStatusReq) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type UpdateUserPasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	OldPassword string `protobuf:"bytes,2,opt,name=oldPassword,proto3" json:"oldPassword,omitempty"`
	NewPassword string `protobuf:"bytes,3,opt,name=newPassword,proto3" json:"newPassword,omitempty"`
}

func (x *UpdateUserPasswordReq) Reset() {
	*x = UpdateUserPasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserPasswordReq) ProtoMessage() {}

func (x *UpdateUserPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserPasswordReq.ProtoReflect.Descriptor instead.
func (*UpdateUserPasswordReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateUserPasswordReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserPasswordReq) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

func (x *UpdateUserPasswordReq) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

type ResetUserPasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *ResetUserPasswordReq) Reset() {
	*x = ResetUserPasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetUserPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetUserPasswordReq) ProtoMessage() {}

func (x *ResetUserPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetUserPasswordReq.ProtoReflect.Descriptor instead.
func (*ResetUserPasswordReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{15}
}

func (x *ResetUserPasswordReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ResetUserPasswordReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type GetUserPermissionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=orgId,proto3" json:"orgId,omitempty"`
}

func (x *GetUserPermissionReq) Reset() {
	*x = GetUserPermissionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserPermissionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPermissionReq) ProtoMessage() {}

func (x *GetUserPermissionReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPermissionReq.ProtoReflect.Descriptor instead.
func (*GetUserPermissionReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetUserPermissionReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserPermissionReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

type UserPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAdmin              bool          `protobuf:"varint,1,opt,name=isAdmin,proto3" json:"isAdmin,omitempty"`
	IsSystem             bool          `protobuf:"varint,2,opt,name=isSystem,proto3" json:"isSystem,omitempty"`
	Org                  *IDName       `protobuf:"bytes,3,opt,name=org,proto3" json:"org,omitempty"`
	Roles                []*RoleIDName `protobuf:"bytes,4,rep,name=roles,proto3" json:"roles,omitempty"`
	Perms                []*Perm       `protobuf:"bytes,5,rep,name=perms,proto3" json:"perms,omitempty"`
	LastUpdatePasswordAt int64         `protobuf:"varint,6,opt,name=lastUpdatePasswordAt,proto3" json:"lastUpdatePasswordAt,omitempty"`
}

func (x *UserPermission) Reset() {
	*x = UserPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPermission) ProtoMessage() {}

func (x *UserPermission) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPermission.ProtoReflect.Descriptor instead.
func (*UserPermission) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{17}
}

func (x *UserPermission) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

func (x *UserPermission) GetIsSystem() bool {
	if x != nil {
		return x.IsSystem
	}
	return false
}

func (x *UserPermission) GetOrg() *IDName {
	if x != nil {
		return x.Org
	}
	return nil
}

func (x *UserPermission) GetRoles() []*RoleIDName {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *UserPermission) GetPerms() []*Perm {
	if x != nil {
		return x.Perms
	}
	return nil
}

func (x *UserPermission) GetLastUpdatePasswordAt() int64 {
	if x != nil {
		return x.LastUpdatePasswordAt
	}
	return 0
}

type ChangeUserLanguageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Language string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *ChangeUserLanguageReq) Reset() {
	*x = ChangeUserLanguageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeUserLanguageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeUserLanguageReq) ProtoMessage() {}

func (x *ChangeUserLanguageReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeUserLanguageReq.ProtoReflect.Descriptor instead.
func (*ChangeUserLanguageReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{18}
}

func (x *ChangeUserLanguageReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ChangeUserLanguageReq) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type UpdateUserAvatarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	AvatarPath string `protobuf:"bytes,2,opt,name=avatarPath,proto3" json:"avatarPath,omitempty"`
}

func (x *UpdateUserAvatarReq) Reset() {
	*x = UpdateUserAvatarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserAvatarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserAvatarReq) ProtoMessage() {}

func (x *UpdateUserAvatarReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserAvatarReq.ProtoReflect.Descriptor instead.
func (*UpdateUserAvatarReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateUserAvatarReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserAvatarReq) GetAvatarPath() string {
	if x != nil {
		return x.AvatarPath
	}
	return ""
}

type OrgInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId     string  `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	Name      string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Remark    string  `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
	Status    bool    `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt int64   `protobuf:"varint,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Creator   *IDName `protobuf:"bytes,6,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (x *OrgInfo) Reset() {
	*x = OrgInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgInfo) ProtoMessage() {}

func (x *OrgInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgInfo.ProtoReflect.Descriptor instead.
func (*OrgInfo) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{20}
}

func (x *OrgInfo) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *OrgInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrgInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *OrgInfo) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *OrgInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *OrgInfo) GetCreator() *IDName {
	if x != nil {
		return x.Creator
	}
	return nil
}

type GetOrgSelectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetOrgSelectReq) Reset() {
	*x = GetOrgSelectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrgSelectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgSelectReq) ProtoMessage() {}

func (x *GetOrgSelectReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgSelectReq.ProtoReflect.Descriptor instead.
func (*GetOrgSelectReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{21}
}

func (x *GetOrgSelectReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetOrgListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentId string `protobuf:"bytes,1,opt,name=parentId,proto3" json:"parentId,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PageNo   int32  `protobuf:"varint,3,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize int32  `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *GetOrgListReq) Reset() {
	*x = GetOrgListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrgListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgListReq) ProtoMessage() {}

func (x *GetOrgListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgListReq.ProtoReflect.Descriptor instead.
func (*GetOrgListReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{22}
}

func (x *GetOrgListReq) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *GetOrgListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetOrgListReq) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetOrgListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetOrgListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orgs     []*OrgInfo `protobuf:"bytes,1,rep,name=orgs,proto3" json:"orgs,omitempty"`
	Total    int64      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	PageNo   int32      `protobuf:"varint,3,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize int32      `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *GetOrgListResp) Reset() {
	*x = GetOrgListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrgListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgListResp) ProtoMessage() {}

func (x *GetOrgListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgListResp.ProtoReflect.Descriptor instead.
func (*GetOrgListResp) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{23}
}

func (x *GetOrgListResp) GetOrgs() []*OrgInfo {
	if x != nil {
		return x.Orgs
	}
	return nil
}

func (x *GetOrgListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetOrgListResp) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetOrgListResp) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetOrgInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentId string `protobuf:"bytes,1,opt,name=parentId,proto3" json:"parentId,omitempty"`
	OrgId    string `protobuf:"bytes,2,opt,name=orgId,proto3" json:"orgId,omitempty"`
}

func (x *GetOrgInfoReq) Reset() {
	*x = GetOrgInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrgInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgInfoReq) ProtoMessage() {}

func (x *GetOrgInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgInfoReq.ProtoReflect.Descriptor instead.
func (*GetOrgInfoReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{24}
}

func (x *GetOrgInfoReq) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *GetOrgInfoReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

type CreateOrgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentId  string `protobuf:"bytes,1,opt,name=parentId,proto3" json:"parentId,omitempty"`
	CreatorId string `protobuf:"bytes,2,opt,name=creatorId,proto3" json:"creatorId,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Remark    string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *CreateOrgReq) Reset() {
	*x = CreateOrgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrgReq) ProtoMessage() {}

func (x *CreateOrgReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrgReq.ProtoReflect.Descriptor instead.
func (*CreateOrgReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{25}
}

func (x *CreateOrgReq) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *CreateOrgReq) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *CreateOrgReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateOrgReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type UpdateOrgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentId string `protobuf:"bytes,1,opt,name=parentId,proto3" json:"parentId,omitempty"`
	OrgId    string `protobuf:"bytes,2,opt,name=orgId,proto3" json:"orgId,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Remark   string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *UpdateOrgReq) Reset() {
	*x = UpdateOrgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrgReq) ProtoMessage() {}

func (x *UpdateOrgReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrgReq.ProtoReflect.Descriptor instead.
func (*UpdateOrgReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateOrgReq) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *UpdateOrgReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *UpdateOrgReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateOrgReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type DeleteOrgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentId string `protobuf:"bytes,1,opt,name=parentId,proto3" json:"parentId,omitempty"`
	OrgId    string `protobuf:"bytes,2,opt,name=orgId,proto3" json:"orgId,omitempty"`
}

func (x *DeleteOrgReq) Reset() {
	*x = DeleteOrgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrgReq) ProtoMessage() {}

func (x *DeleteOrgReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrgReq.ProtoReflect.Descriptor instead.
func (*DeleteOrgReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteOrgReq) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *DeleteOrgReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

type ChangeOrgStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentId string `protobuf:"bytes,1,opt,name=parentId,proto3" json:"parentId,omitempty"`
	OrgId    string `protobuf:"bytes,2,opt,name=orgId,proto3" json:"orgId,omitempty"`
	Status   bool   `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ChangeOrgStatusReq) Reset() {
	*x = ChangeOrgStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeOrgStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeOrgStatusReq) ProtoMessage() {}

func (x *ChangeOrgStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeOrgStatusReq.ProtoReflect.Descriptor instead.
func (*ChangeOrgStatusReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{28}
}

func (x *ChangeOrgStatusReq) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *ChangeOrgStatusReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *ChangeOrgStatusReq) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type AddOrgUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentId string `protobuf:"bytes,1,opt,name=parentId,proto3" json:"parentId,omitempty"`
	OrgId    string `protobuf:"bytes,2,opt,name=orgId,proto3" json:"orgId,omitempty"`
	UserId   string `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
	RoleId   string `protobuf:"bytes,4,opt,name=roleId,proto3" json:"roleId,omitempty"`
}

func (x *AddOrgUserReq) Reset() {
	*x = AddOrgUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrgUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrgUserReq) ProtoMessage() {}

func (x *AddOrgUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrgUserReq.ProtoReflect.Descriptor instead.
func (*AddOrgUserReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{29}
}

func (x *AddOrgUserReq) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *AddOrgUserReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *AddOrgUserReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddOrgUserReq) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type RemoveOrgUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentId string `protobuf:"bytes,1,opt,name=parentId,proto3" json:"parentId,omitempty"`
	OrgId    string `protobuf:"bytes,2,opt,name=orgId,proto3" json:"orgId,omitempty"`
	UserId   string `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *RemoveOrgUserReq) Reset() {
	*x = RemoveOrgUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveOrgUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveOrgUserReq) ProtoMessage() {}

func (x *RemoveOrgUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveOrgUserReq.ProtoReflect.Descriptor instead.
func (*RemoveOrgUserReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{30}
}

func (x *RemoveOrgUserReq) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *RemoveOrgUserReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *RemoveOrgUserReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RoleIDName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IsAdmin  bool   `protobuf:"varint,3,opt,name=isAdmin,proto3" json:"isAdmin,omitempty"`
	IsSystem bool   `protobuf:"varint,4,opt,name=isSystem,proto3" json:"isSystem,omitempty"`
}

func (x *RoleIDName) Reset() {
	*x = RoleIDName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleIDName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleIDName) ProtoMessage() {}

func (x *RoleIDName) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleIDName.ProtoReflect.Descriptor instead.
func (*RoleIDName) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{31}
}

func (x *RoleIDName) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoleIDName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleIDName) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

func (x *RoleIDName) GetIsSystem() bool {
	if x != nil {
		return x.IsSystem
	}
	return false
}

type RoleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId    string  `protobuf:"bytes,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
	Name      string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Remark    string  `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
	IsAdmin   bool    `protobuf:"varint,4,opt,name=isAdmin,proto3" json:"isAdmin,omitempty"`
	IsSystem  bool    `protobuf:"varint,5,opt,name=isSystem,proto3" json:"isSystem,omitempty"`
	Status    bool    `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt int64   `protobuf:"varint,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Creator   *IDName `protobuf:"bytes,8,opt,name=creator,proto3" json:"creator,omitempty"`
	Perms     []*Perm `protobuf:"bytes,9,rep,name=perms,proto3" json:"perms,omitempty"`
}

func (x *RoleInfo) Reset() {
	*x = RoleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleInfo) ProtoMessage() {}

func (x *RoleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleInfo.ProtoReflect.Descriptor instead.
func (*RoleInfo) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{32}
}

func (x *RoleInfo) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *RoleInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *RoleInfo) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

func (x *RoleInfo) GetIsSystem() bool {
	if x != nil {
		return x.IsSystem
	}
	return false
}

func (x *RoleInfo) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *RoleInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *RoleInfo) GetCreator() *IDName {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *RoleInfo) GetPerms() []*Perm {
	if x != nil {
		return x.Perms
	}
	return nil
}

type GetRoleSelectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId string `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
}

func (x *GetRoleSelectReq) Reset() {
	*x = GetRoleSelectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleSelectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleSelectReq) ProtoMessage() {}

func (x *GetRoleSelectReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleSelectReq.ProtoReflect.Descriptor instead.
func (*GetRoleSelectReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{33}
}

func (x *GetRoleSelectReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

type GetRoleSelectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles []*RoleIDName `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *GetRoleSelectResp) Reset() {
	*x = GetRoleSelectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleSelectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleSelectResp) ProtoMessage() {}

func (x *GetRoleSelectResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleSelectResp.ProtoReflect.Descriptor instead.
func (*GetRoleSelectResp) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{34}
}

func (x *GetRoleSelectResp) GetRoles() []*RoleIDName {
	if x != nil {
		return x.Roles
	}
	return nil
}

type GetRoleListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId    string `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PageNo   int32  `protobuf:"varint,3,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize int32  `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *GetRoleListReq) Reset() {
	*x = GetRoleListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleListReq) ProtoMessage() {}

func (x *GetRoleListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleListReq.ProtoReflect.Descriptor instead.
func (*GetRoleListReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{35}
}

func (x *GetRoleListReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *GetRoleListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetRoleListReq) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetRoleListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetRoleListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles    []*RoleInfo `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
	Total    int64       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	PageNo   int32       `protobuf:"varint,3,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize int32       `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *GetRoleListResp) Reset() {
	*x = GetRoleListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleListResp) ProtoMessage() {}

func (x *GetRoleListResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleListResp.ProtoReflect.Descriptor instead.
func (*GetRoleListResp) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{36}
}

func (x *GetRoleListResp) GetRoles() []*RoleInfo {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *GetRoleListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetRoleListResp) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *GetRoleListResp) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetRoleInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId  string `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	RoleId string `protobuf:"bytes,2,opt,name=roleId,proto3" json:"roleId,omitempty"`
}

func (x *GetRoleInfoReq) Reset() {
	*x = GetRoleInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleInfoReq) ProtoMessage() {}

func (x *GetRoleInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleInfoReq.ProtoReflect.Descriptor instead.
func (*GetRoleInfoReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{37}
}

func (x *GetRoleInfoReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *GetRoleInfoReq) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type CreateRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatorId string  `protobuf:"bytes,1,opt,name=creatorId,proto3" json:"creatorId,omitempty"`
	OrgId     string  `protobuf:"bytes,2,opt,name=orgId,proto3" json:"orgId,omitempty"`
	Name      string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Remark    string  `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
	Perms     []*Perm `protobuf:"bytes,5,rep,name=perms,proto3" json:"perms,omitempty"`
}

func (x *CreateRoleReq) Reset() {
	*x = CreateRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleReq) ProtoMessage() {}

func (x *CreateRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleReq.ProtoReflect.Descriptor instead.
func (*CreateRoleReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{38}
}

func (x *CreateRoleReq) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *CreateRoleReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *CreateRoleReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRoleReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CreateRoleReq) GetPerms() []*Perm {
	if x != nil {
		return x.Perms
	}
	return nil
}

type UpdateRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId  string  `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	RoleId string  `protobuf:"bytes,2,opt,name=roleId,proto3" json:"roleId,omitempty"`
	Name   string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Remark string  `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
	Perms  []*Perm `protobuf:"bytes,5,rep,name=perms,proto3" json:"perms,omitempty"`
}

func (x *UpdateRoleReq) Reset() {
	*x = UpdateRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleReq) ProtoMessage() {}

func (x *UpdateRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleReq.ProtoReflect.Descriptor instead.
func (*UpdateRoleReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateRoleReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *UpdateRoleReq) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *UpdateRoleReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateRoleReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdateRoleReq) GetPerms() []*Perm {
	if x != nil {
		return x.Perms
	}
	return nil
}

type DeleteRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId  string `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	RoleId string `protobuf:"bytes,2,opt,name=roleId,proto3" json:"roleId,omitempty"`
}

func (x *DeleteRoleReq) Reset() {
	*x = DeleteRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleReq) ProtoMessage() {}

func (x *DeleteRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleReq.ProtoReflect.Descriptor instead.
func (*DeleteRoleReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{40}
}

func (x *DeleteRoleReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *DeleteRoleReq) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type ChangeRoleStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId  string `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	RoleId string `protobuf:"bytes,2,opt,name=roleId,proto3" json:"roleId,omitempty"`
	Status bool   `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ChangeRoleStatusReq) Reset() {
	*x = ChangeRoleStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeRoleStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeRoleStatusReq) ProtoMessage() {}

func (x *ChangeRoleStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeRoleStatusReq.ProtoReflect.Descriptor instead.
func (*ChangeRoleStatusReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{41}
}

func (x *ChangeRoleStatusReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *ChangeRoleStatusReq) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *ChangeRoleStatusReq) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetCaptchaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"` // 客户端key
}

func (x *GetCaptchaReq) Reset() {
	*x = GetCaptchaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCaptchaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCaptchaReq) ProtoMessage() {}

func (x *GetCaptchaReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCaptchaReq.ProtoReflect.Descriptor instead.
func (*GetCaptchaReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{42}
}

func (x *GetCaptchaReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetCaptchaResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"` // 客户端key
	B64 string `protobuf:"bytes,2,opt,name=b64,proto3" json:"b64,omitempty"` // 验证码png图片base64字符串
}

func (x *GetCaptchaResp) Reset() {
	*x = GetCaptchaResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCaptchaResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCaptchaResp) ProtoMessage() {}

func (x *GetCaptchaResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCaptchaResp.ProtoReflect.Descriptor instead.
func (*GetCaptchaResp) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{43}
}

func (x *GetCaptchaResp) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetCaptchaResp) GetB64() string {
	if x != nil {
		return x.B64
	}
	return ""
}

type LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"` // 用户名
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // 密码
	Key      string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`           // 客户端key
	Code     string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`         // 验证码
	Language string `protobuf:"bytes,5,opt,name=language,proto3" json:"language,omitempty"` //用户语言
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{44}
}

func (x *LoginReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *LoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *LoginReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *LoginReq) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type LoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User       *UserInfo       `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Permission *UserPermission `protobuf:"bytes,2,opt,name=permission,proto3" json:"permission,omitempty"`
}

func (x *LoginResp) Reset() {
	*x = LoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResp) ProtoMessage() {}

func (x *LoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResp.ProtoReflect.Descriptor instead.
func (*LoginResp) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{45}
}

func (x *LoginResp) GetUser() *UserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *LoginResp) GetPermission() *UserPermission {
	if x != nil {
		return x.Permission
	}
	return nil
}

type RegisterByEmailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Code     string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *RegisterByEmailReq) Reset() {
	*x = RegisterByEmailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterByEmailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterByEmailReq) ProtoMessage() {}

func (x *RegisterByEmailReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterByEmailReq.ProtoReflect.Descriptor instead.
func (*RegisterByEmailReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{46}
}

func (x *RegisterByEmailReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *RegisterByEmailReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RegisterByEmailReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type RegisterSendEmailCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
}

func (x *RegisterSendEmailCodeReq) Reset() {
	*x = RegisterSendEmailCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterSendEmailCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterSendEmailCodeReq) ProtoMessage() {}

func (x *RegisterSendEmailCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterSendEmailCodeReq.ProtoReflect.Descriptor instead.
func (*RegisterSendEmailCodeReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{47}
}

func (x *RegisterSendEmailCodeReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RegisterSendEmailCodeReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

// --- reset password ---
type ResetPasswordSendEmailCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *ResetPasswordSendEmailCodeReq) Reset() {
	*x = ResetPasswordSendEmailCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordSendEmailCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordSendEmailCodeReq) ProtoMessage() {}

func (x *ResetPasswordSendEmailCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordSendEmailCodeReq.ProtoReflect.Descriptor instead.
func (*ResetPasswordSendEmailCodeReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{48}
}

func (x *ResetPasswordSendEmailCodeReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type ResetPasswordByEmailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Code     string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *ResetPasswordByEmailReq) Reset() {
	*x = ResetPasswordByEmailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordByEmailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordByEmailReq) ProtoMessage() {}

func (x *ResetPasswordByEmailReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordByEmailReq.ProtoReflect.Descriptor instead.
func (*ResetPasswordByEmailReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{49}
}

func (x *ResetPasswordByEmailReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ResetPasswordByEmailReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ResetPasswordByEmailReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type GetUserIDByOrgAndNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // 用户名
}

func (x *GetUserIDByOrgAndNameReq) Reset() {
	*x = GetUserIDByOrgAndNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserIDByOrgAndNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserIDByOrgAndNameReq) ProtoMessage() {}

func (x *GetUserIDByOrgAndNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserIDByOrgAndNameReq.ProtoReflect.Descriptor instead.
func (*GetUserIDByOrgAndNameReq) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{50}
}

func (x *GetUserIDByOrgAndNameReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *GetUserIDByOrgAndNameReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetUserIDByOrgAndNameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 找到的用户ID，未找到时为 0
}

func (x *GetUserIDByOrgAndNameResp) Reset() {
	*x = GetUserIDByOrgAndNameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_iam_service_iam_service_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserIDByOrgAndNameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserIDByOrgAndNameResp) ProtoMessage() {}

func (x *GetUserIDByOrgAndNameResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_iam_service_iam_service_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserIDByOrgAndNameResp.ProtoReflect.Descriptor instead.
func (*GetUserIDByOrgAndNameResp) Descriptor() ([]byte, []int) {
	return file_proto_iam_service_iam_service_proto_rawDescGZIP(), []int{51}
}

func (x *GetUserIDByOrgAndNameResp) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

var File_proto_iam_service_iam_service_proto protoreflect.FileDescriptor

var file_proto_iam_service_iam_service_proto_rawDesc = []byte{
	0x0a, 0x23, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x61, 0x6d, 0x2d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x69, 0x61, 0x6d, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x72, 0x72, 0x2d, 0x63, 0x6f, 0x64, 0x65, 0x2f,
	0x65, 0x72, 0x72, 0x2d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x1a, 0x0a, 0x04, 0x50, 0x65, 0x72, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x65, 0x72, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x65, 0x72, 0x6d, 0x22, 0x5e, 0x0a, 0x06,
	0x49, 0x44, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x6e, 0x61,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x37, 0x0a, 0x06,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x44, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x07, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x73, 0x22, 0x9b, 0x03, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2d,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x44,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x28, 0x0a,
	0x04, 0x6f, 0x72, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x61,
	0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72,
	0x67, 0x52, 0x04, 0x6f, 0x72, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x50,
	0x61, 0x74, 0x68, 0x22, 0x5f, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x67, 0x12, 0x25,
	0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x61,
	0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x44, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x03, 0x6f, 0x72, 0x67, 0x12, 0x2d, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x22, 0x4c, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x4e, 0x6f, 0x74, 0x49, 0x6e, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x35, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x76, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0x88, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x3e, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0xa7, 0x02, 0x0a,
	0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x22, 0x85, 0x02, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x22, 0x27,
	0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x73,
	0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x22, 0x4a, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22,
	0x44, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0xf9, 0x01, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x25,
	0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x61,
	0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x44, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x03, 0x6f, 0x72, 0x67, 0x12, 0x2d, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x05, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x32, 0x0a,
	0x14, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x6c, 0x61, 0x73,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x41,
	0x74, 0x22, 0x4b, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x4d,
	0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x50, 0x61, 0x74, 0x68, 0x22, 0xb0, 0x01,
	0x0a, 0x07, 0x4f, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x2d, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x49, 0x44, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x22, 0x29, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0x84, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x04, 0x6f, 0x72, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4f, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6f, 0x72, 0x67, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x41, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x74, 0x0a, 0x0c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x22, 0x6c, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x40,
	0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72,
	0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64,
	0x22, 0x5e, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x72, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x71, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72,
	0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x66, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x22, 0x92, 0x02, 0x0a, 0x08, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x44, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x05, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x22, 0x28,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a,
	0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69,
	0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49,
	0x44, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x6e, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f,
	0x72, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x88, 0x01, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2b, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x3e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x98, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x65, 0x72,
	0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x05, 0x70, 0x65, 0x72,
	0x6d, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x27,
	0x0a, 0x05, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x6d,
	0x52, 0x05, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x22, 0x3d, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72,
	0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x21, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68,
	0x61, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x34, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x70,
	0x74, 0x63, 0x68, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x36,
	0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x36, 0x34, 0x22, 0x84, 0x01, 0x0a,
	0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x22, 0x73, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x29, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0a, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x5a, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x4c, 0x0a, 0x18, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x35, 0x0a, 0x1d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x5f, 0x0a, 0x17, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x45, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x42, 0x79, 0x4f, 0x72, 0x67, 0x41, 0x6e, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x34, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x42, 0x79,
	0x4f, 0x72, 0x67, 0x41, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x32, 0xc5, 0x15, 0x0a, 0x0a, 0x49, 0x41, 0x4d, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4e, 0x6f, 0x74, 0x49, 0x6e, 0x4f, 0x72, 0x67, 0x12,
	0x25, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x4e, 0x6f, 0x74, 0x49, 0x6e,
	0x4f, 0x72, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x22, 0x00, 0x12, 0x57, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x12, 0x26, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x13, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x43, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1b, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x15,
	0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x13, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x49, 0x44, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x69, 0x61, 0x6d,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x4e, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x52, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x22, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x2e, 0x69, 0x61, 0x6d, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x69, 0x61,
	0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x52, 0x0a,
	0x12, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x12, 0x22, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x4e, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x20, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x43, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x12, 0x1c, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x13, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x1b, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x40, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x2e,
	0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x69, 0x61, 0x6d, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x72, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x00, 0x12, 0x3d, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x12, 0x19,
	0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x69, 0x61, 0x6d, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x44, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x00,
	0x12, 0x40, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x12, 0x19, 0x2e,
	0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x40, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x12,
	0x19, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x72,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x72, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x42, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x1a, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41,
	0x64, 0x64, 0x4f, 0x72, 0x67, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x4f, 0x72, 0x67, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x72, 0x67, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x50, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x12, 0x1d, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x1e, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1b, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c,
	0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x43,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x2e,
	0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x69, 0x61, 0x6d,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x12, 0x1a, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e,
	0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x49, 0x44, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1a, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1a, 0x2e, 0x69, 0x61, 0x6d,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x4e, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x47, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x12, 0x1a,
	0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x69, 0x61, 0x6d,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x70, 0x74,
	0x63, 0x68, 0x61, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x05, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x12, 0x15, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x69, 0x61, 0x6d, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x42,
	0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1f, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x42, 0x79, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x58, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x6e,
	0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x2e, 0x69, 0x61, 0x6d,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x1a, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x6e, 0x64,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x2e, 0x69, 0x61, 0x6d, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x56, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x24, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x42, 0x79, 0x4f, 0x72, 0x67, 0x41, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x25, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x42, 0x79, 0x4f, 0x72, 0x67, 0x41, 0x6e, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x69, 0x61, 0x6d, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x42,
	0x79, 0x4f, 0x72, 0x67, 0x41, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42,
	0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x55, 0x6e,
	0x69, 0x63, 0x6f, 0x6d, 0x41, 0x49, 0x2f, 0x77, 0x61, 0x6e, 0x77, 0x75, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x61, 0x6d, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_iam_service_iam_service_proto_rawDescOnce sync.Once
	file_proto_iam_service_iam_service_proto_rawDescData = file_proto_iam_service_iam_service_proto_rawDesc
)

func file_proto_iam_service_iam_service_proto_rawDescGZIP() []byte {
	file_proto_iam_service_iam_service_proto_rawDescOnce.Do(func() {
		file_proto_iam_service_iam_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_iam_service_iam_service_proto_rawDescData)
	})
	return file_proto_iam_service_iam_service_proto_rawDescData
}

var file_proto_iam_service_iam_service_proto_msgTypes = make([]protoimpl.MessageInfo, 52)
var file_proto_iam_service_iam_service_proto_goTypes = []interface{}{
	(*Perm)(nil),                          // 0: iam_service.Perm
	(*IDName)(nil),                        // 1: iam_service.IDName
	(*Select)(nil),                        // 2: iam_service.Select
	(*UserInfo)(nil),                      // 3: iam_service.UserInfo
	(*UserOrg)(nil),                       // 4: iam_service.UserOrg
	(*GetUserSelectNotInOrgReq)(nil),      // 5: iam_service.GetUserSelectNotInOrgReq
	(*GetUserSelectByUserIDsReq)(nil),     // 6: iam_service.GetUserSelectByUserIDsReq
	(*GetUserListReq)(nil),                // 7: iam_service.GetUserListReq
	(*GetUserListResp)(nil),               // 8: iam_service.GetUserListResp
	(*GetUserInfoReq)(nil),                // 9: iam_service.GetUserInfoReq
	(*CreateUserReq)(nil),                 // 10: iam_service.CreateUserReq
	(*UpdateUserReq)(nil),                 // 11: iam_service.UpdateUserReq
	(*DeleteUserReq)(nil),                 // 12: iam_service.DeleteUserReq
	(*ChangeUserStatusReq)(nil),           // 13: iam_service.ChangeUserStatusReq
	(*UpdateUserPasswordReq)(nil),         // 14: iam_service.UpdateUserPasswordReq
	(*ResetUserPasswordReq)(nil),          // 15: iam_service.ResetUserPasswordReq
	(*GetUserPermissionReq)(nil),          // 16: iam_service.GetUserPermissionReq
	(*UserPermission)(nil),                // 17: iam_service.UserPermission
	(*ChangeUserLanguageReq)(nil),         // 18: iam_service.ChangeUserLanguageReq
	(*UpdateUserAvatarReq)(nil),           // 19: iam_service.UpdateUserAvatarReq
	(*OrgInfo)(nil),                       // 20: iam_service.OrgInfo
	(*GetOrgSelectReq)(nil),               // 21: iam_service.GetOrgSelectReq
	(*GetOrgListReq)(nil),                 // 22: iam_service.GetOrgListReq
	(*GetOrgListResp)(nil),                // 23: iam_service.GetOrgListResp
	(*GetOrgInfoReq)(nil),                 // 24: iam_service.GetOrgInfoReq
	(*CreateOrgReq)(nil),                  // 25: iam_service.CreateOrgReq
	(*UpdateOrgReq)(nil),                  // 26: iam_service.UpdateOrgReq
	(*DeleteOrgReq)(nil),                  // 27: iam_service.DeleteOrgReq
	(*ChangeOrgStatusReq)(nil),            // 28: iam_service.ChangeOrgStatusReq
	(*AddOrgUserReq)(nil),                 // 29: iam_service.AddOrgUserReq
	(*RemoveOrgUserReq)(nil),              // 30: iam_service.RemoveOrgUserReq
	(*RoleIDName)(nil),                    // 31: iam_service.RoleIDName
	(*RoleInfo)(nil),                      // 32: iam_service.RoleInfo
	(*GetRoleSelectReq)(nil),              // 33: iam_service.GetRoleSelectReq
	(*GetRoleSelectResp)(nil),             // 34: iam_service.GetRoleSelectResp
	(*GetRoleListReq)(nil),                // 35: iam_service.GetRoleListReq
	(*GetRoleListResp)(nil),               // 36: iam_service.GetRoleListResp
	(*GetRoleInfoReq)(nil),                // 37: iam_service.GetRoleInfoReq
	(*CreateRoleReq)(nil),                 // 38: iam_service.CreateRoleReq
	(*UpdateRoleReq)(nil),                 // 39: iam_service.UpdateRoleReq
	(*DeleteRoleReq)(nil),                 // 40: iam_service.DeleteRoleReq
	(*ChangeRoleStatusReq)(nil),           // 41: iam_service.ChangeRoleStatusReq
	(*GetCaptchaReq)(nil),                 // 42: iam_service.GetCaptchaReq
	(*GetCaptchaResp)(nil),                // 43: iam_service.GetCaptchaResp
	(*LoginReq)(nil),                      // 44: iam_service.LoginReq
	(*LoginResp)(nil),                     // 45: iam_service.LoginResp
	(*RegisterByEmailReq)(nil),            // 46: iam_service.RegisterByEmailReq
	(*RegisterSendEmailCodeReq)(nil),      // 47: iam_service.RegisterSendEmailCodeReq
	(*ResetPasswordSendEmailCodeReq)(nil), // 48: iam_service.ResetPasswordSendEmailCodeReq
	(*ResetPasswordByEmailReq)(nil),       // 49: iam_service.ResetPasswordByEmailReq
	(*GetUserIDByOrgAndNameReq)(nil),      // 50: iam_service.GetUserIDByOrgAndNameReq
	(*GetUserIDByOrgAndNameResp)(nil),     // 51: iam_service.GetUserIDByOrgAndNameResp
	(*err_code.Status)(nil),               // 52: err_code.Status
	(*emptypb.Empty)(nil),                 // 53: google.protobuf.Empty
}
var file_proto_iam_service_iam_service_proto_depIdxs = []int32{
	52, // 0: iam_service.IDName.nameStatus:type_name -> err_code.Status
	1,  // 1: iam_service.Select.selects:type_name -> iam_service.IDName
	1,  // 2: iam_service.UserInfo.creator:type_name -> iam_service.IDName
	4,  // 3: iam_service.UserInfo.orgs:type_name -> iam_service.UserOrg
	1,  // 4: iam_service.UserOrg.org:type_name -> iam_service.IDName
	31, // 5: iam_service.UserOrg.roles:type_name -> iam_service.RoleIDName
	3,  // 6: iam_service.GetUserListResp.users:type_name -> iam_service.UserInfo
	1,  // 7: iam_service.UserPermission.org:type_name -> iam_service.IDName
	31, // 8: iam_service.UserPermission.roles:type_name -> iam_service.RoleIDName
	0,  // 9: iam_service.UserPermission.perms:type_name -> iam_service.Perm
	1,  // 10: iam_service.OrgInfo.creator:type_name -> iam_service.IDName
	20, // 11: iam_service.GetOrgListResp.orgs:type_name -> iam_service.OrgInfo
	1,  // 12: iam_service.RoleInfo.creator:type_name -> iam_service.IDName
	0,  // 13: iam_service.RoleInfo.perms:type_name -> iam_service.Perm
	31, // 14: iam_service.GetRoleSelectResp.roles:type_name -> iam_service.RoleIDName
	32, // 15: iam_service.GetRoleListResp.roles:type_name -> iam_service.RoleInfo
	0,  // 16: iam_service.CreateRoleReq.perms:type_name -> iam_service.Perm
	0,  // 17: iam_service.UpdateRoleReq.perms:type_name -> iam_service.Perm
	3,  // 18: iam_service.LoginResp.user:type_name -> iam_service.UserInfo
	17, // 19: iam_service.LoginResp.permission:type_name -> iam_service.UserPermission
	5,  // 20: iam_service.IAMService.GetUserSelectNotInOrg:input_type -> iam_service.GetUserSelectNotInOrgReq
	6,  // 21: iam_service.IAMService.GetUserSelectByUserIDs:input_type -> iam_service.GetUserSelectByUserIDsReq
	7,  // 22: iam_service.IAMService.GetUserList:input_type -> iam_service.GetUserListReq
	9,  // 23: iam_service.IAMService.GetUserInfo:input_type -> iam_service.GetUserInfoReq
	10, // 24: iam_service.IAMService.CreateUser:input_type -> iam_service.CreateUserReq
	11, // 25: iam_service.IAMService.UpdateUser:input_type -> iam_service.UpdateUserReq
	12, // 26: iam_service.IAMService.DeleteUser:input_type -> iam_service.DeleteUserReq
	13, // 27: iam_service.IAMService.ChangeUserStatus:input_type -> iam_service.ChangeUserStatusReq
	14, // 28: iam_service.IAMService.UpdateUserPassword:input_type -> iam_service.UpdateUserPasswordReq
	15, // 29: iam_service.IAMService.ResetUserPassword:input_type -> iam_service.ResetUserPasswordReq
	16, // 30: iam_service.IAMService.GetUserPermission:input_type -> iam_service.GetUserPermissionReq
	18, // 31: iam_service.IAMService.ChangeUserLanguage:input_type -> iam_service.ChangeUserLanguageReq
	19, // 32: iam_service.IAMService.UpdateUserAvatar:input_type -> iam_service.UpdateUserAvatarReq
	21, // 33: iam_service.IAMService.GetOrgSelect:input_type -> iam_service.GetOrgSelectReq
	22, // 34: iam_service.IAMService.GetOrgList:input_type -> iam_service.GetOrgListReq
	24, // 35: iam_service.IAMService.GetOrgInfo:input_type -> iam_service.GetOrgInfoReq
	25, // 36: iam_service.IAMService.CreateOrg:input_type -> iam_service.CreateOrgReq
	26, // 37: iam_service.IAMService.UpdateOrg:input_type -> iam_service.UpdateOrgReq
	27, // 38: iam_service.IAMService.DeleteOrg:input_type -> iam_service.DeleteOrgReq
	28, // 39: iam_service.IAMService.ChangeOrgStatus:input_type -> iam_service.ChangeOrgStatusReq
	29, // 40: iam_service.IAMService.AddOrgUser:input_type -> iam_service.AddOrgUserReq
	30, // 41: iam_service.IAMService.RemoveOrgUser:input_type -> iam_service.RemoveOrgUserReq
	33, // 42: iam_service.IAMService.GetRoleSelect:input_type -> iam_service.GetRoleSelectReq
	35, // 43: iam_service.IAMService.GetRoleList:input_type -> iam_service.GetRoleListReq
	37, // 44: iam_service.IAMService.GetRoleInfo:input_type -> iam_service.GetRoleInfoReq
	38, // 45: iam_service.IAMService.CreateRole:input_type -> iam_service.CreateRoleReq
	39, // 46: iam_service.IAMService.UpdateRole:input_type -> iam_service.UpdateRoleReq
	40, // 47: iam_service.IAMService.DeleteRole:input_type -> iam_service.DeleteRoleReq
	41, // 48: iam_service.IAMService.ChangeRoleStatus:input_type -> iam_service.ChangeRoleStatusReq
	42, // 49: iam_service.IAMService.GetCaptcha:input_type -> iam_service.GetCaptchaReq
	44, // 50: iam_service.IAMService.Login:input_type -> iam_service.LoginReq
	46, // 51: iam_service.IAMService.RegisterByEmail:input_type -> iam_service.RegisterByEmailReq
	47, // 52: iam_service.IAMService.RegisterSendEmailCode:input_type -> iam_service.RegisterSendEmailCodeReq
	48, // 53: iam_service.IAMService.ResetPasswordSendEmailCode:input_type -> iam_service.ResetPasswordSendEmailCodeReq
	49, // 54: iam_service.IAMService.ResetPasswordByEmail:input_type -> iam_service.ResetPasswordByEmailReq
	50, // 55: iam_service.IAMService.GetUserIDByOrgAndName:input_type -> iam_service.GetUserIDByOrgAndNameReq
	2,  // 56: iam_service.IAMService.GetUserSelectNotInOrg:output_type -> iam_service.Select
	2,  // 57: iam_service.IAMService.GetUserSelectByUserIDs:output_type -> iam_service.Select
	8,  // 58: iam_service.IAMService.GetUserList:output_type -> iam_service.GetUserListResp
	3,  // 59: iam_service.IAMService.GetUserInfo:output_type -> iam_service.UserInfo
	1,  // 60: iam_service.IAMService.CreateUser:output_type -> iam_service.IDName
	53, // 61: iam_service.IAMService.UpdateUser:output_type -> google.protobuf.Empty
	53, // 62: iam_service.IAMService.DeleteUser:output_type -> google.protobuf.Empty
	53, // 63: iam_service.IAMService.ChangeUserStatus:output_type -> google.protobuf.Empty
	53, // 64: iam_service.IAMService.UpdateUserPassword:output_type -> google.protobuf.Empty
	53, // 65: iam_service.IAMService.ResetUserPassword:output_type -> google.protobuf.Empty
	17, // 66: iam_service.IAMService.GetUserPermission:output_type -> iam_service.UserPermission
	53, // 67: iam_service.IAMService.ChangeUserLanguage:output_type -> google.protobuf.Empty
	53, // 68: iam_service.IAMService.UpdateUserAvatar:output_type -> google.protobuf.Empty
	2,  // 69: iam_service.IAMService.GetOrgSelect:output_type -> iam_service.Select
	23, // 70: iam_service.IAMService.GetOrgList:output_type -> iam_service.GetOrgListResp
	20, // 71: iam_service.IAMService.GetOrgInfo:output_type -> iam_service.OrgInfo
	1,  // 72: iam_service.IAMService.CreateOrg:output_type -> iam_service.IDName
	53, // 73: iam_service.IAMService.UpdateOrg:output_type -> google.protobuf.Empty
	53, // 74: iam_service.IAMService.DeleteOrg:output_type -> google.protobuf.Empty
	53, // 75: iam_service.IAMService.ChangeOrgStatus:output_type -> google.protobuf.Empty
	53, // 76: iam_service.IAMService.AddOrgUser:output_type -> google.protobuf.Empty
	53, // 77: iam_service.IAMService.RemoveOrgUser:output_type -> google.protobuf.Empty
	34, // 78: iam_service.IAMService.GetRoleSelect:output_type -> iam_service.GetRoleSelectResp
	36, // 79: iam_service.IAMService.GetRoleList:output_type -> iam_service.GetRoleListResp
	32, // 80: iam_service.IAMService.GetRoleInfo:output_type -> iam_service.RoleInfo
	31, // 81: iam_service.IAMService.CreateRole:output_type -> iam_service.RoleIDName
	53, // 82: iam_service.IAMService.UpdateRole:output_type -> google.protobuf.Empty
	53, // 83: iam_service.IAMService.DeleteRole:output_type -> google.protobuf.Empty
	53, // 84: iam_service.IAMService.ChangeRoleStatus:output_type -> google.protobuf.Empty
	43, // 85: iam_service.IAMService.GetCaptcha:output_type -> iam_service.GetCaptchaResp
	45, // 86: iam_service.IAMService.Login:output_type -> iam_service.LoginResp
	53, // 87: iam_service.IAMService.RegisterByEmail:output_type -> google.protobuf.Empty
	53, // 88: iam_service.IAMService.RegisterSendEmailCode:output_type -> google.protobuf.Empty
	53, // 89: iam_service.IAMService.ResetPasswordSendEmailCode:output_type -> google.protobuf.Empty
	53, // 90: iam_service.IAMService.ResetPasswordByEmail:output_type -> google.protobuf.Empty
	51, // 91: iam_service.IAMService.GetUserIDByOrgAndName:output_type -> iam_service.GetUserIDByOrgAndNameResp
	56, // [56:92] is the sub-list for method output_type
	20, // [20:56] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_proto_iam_service_iam_service_proto_init() }
func file_proto_iam_service_iam_service_proto_init() {
	if File_proto_iam_service_iam_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_iam_service_iam_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Perm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Select); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOrg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSelectNotInOrgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSelectByUserIDsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeUserStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserPasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetUserPasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserPermissionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeUserLanguageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserAvatarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrgSelectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrgListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrgListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrgInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeOrgStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrgUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveOrgUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleIDName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleSelectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleSelectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeRoleStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCaptchaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCaptchaResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterByEmailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterSendEmailCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPasswordSendEmailCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPasswordByEmailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserIDByOrgAndNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_iam_service_iam_service_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserIDByOrgAndNameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_iam_service_iam_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   52,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_iam_service_iam_service_proto_goTypes,
		DependencyIndexes: file_proto_iam_service_iam_service_proto_depIdxs,
		MessageInfos:      file_proto_iam_service_iam_service_proto_msgTypes,
	}.Build()
	File_proto_iam_service_iam_service_proto = out.File
	file_proto_iam_service_iam_service_proto_rawDesc = nil
	file_proto_iam_service_iam_service_proto_goTypes = nil
	file_proto_iam_service_iam_service_proto_depIdxs = nil
}
